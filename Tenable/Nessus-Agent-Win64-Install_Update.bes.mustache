<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<{{TypeTaskOrFixlet}}{{^TypeTaskOrFixlet}}Task{{/TypeTaskOrFixlet}}>
		<Title>{{>TitlePrefix}} {{DisplayName}} v{{version}} - Windows (x64)</Title>
		<Description><![CDATA[<DIV id=fixletMessage2 class=FixletMessage>
<DIV id=paramFixletDescription>
<P>This task will download and install "{{DisplayName}} v{{version}}" package onto selected endpoints <br><br><b>Run Command As:</b> System User<br><br><b>Download Size:</b> {{DownloadSize}} KB</P></DIV>
<script>
loaded = false;
var CODE_SITE_NAME = 'BES Support';
function loadScript (siteName, callback) {
	loaded = false;
	var relevanceQuery ='( value of it) of (mime fields of (bes fixlets whose ( name of it = "Parameterized Fixlet Library" and  name of site of it = \"' + siteName + '\" ))) whose (name of it = "vrt_utils.js")'
	var code = EvaluateRelevance(relevanceQuery);
	var head = document.getElementsByTagName("head")[0];
	var script   = document.createElement("script");
	script.type  = "text/javascript";
	script.text = code;
	head.appendChild(script);
	callback();
}
function scriptLoaded(){
	if (!loaded){
		if ( typeof FixletUtils !== 'undefined') {
			loaded = true;
	/*
	* Pleas Note: The following code will be moved to library with next publish of lib and user will have to only call method
	*/
			var relQuery = "(messages of it) of bes fixlets whose (name of it = \"Parameterized Fixlet Library\" and ((name of it ) of site of it = \"" + CODE_SITE_NAME +"\" ))";
			var messages = EvaluateRelevance(relQuery);
			var regex = /\s*<DIV id=globalizationMessageDiv  style="display:none;">([\x00-\x7F]+)\s*<\/Div>/i;
			var matches = regex.exec(messages);
			matches[1]=matches[1].replace(/<br>/gi,"");
			eval(matches[1]);
			FixletUtils.initFixletRender();
		}
	}
}
loadScript(CODE_SITE_NAME, scriptLoaded);
</script>
<DIV class=FixletProperty></DIV></DIV>]]>
        </Description>
		<Relevance>windows of operating system</Relevance>
		<Relevance><![CDATA[x64 of operating system]]></Relevance>
		{{#patch}}{{#DisplayName}}
		<Relevance><![CDATA[{{#install_only}}not {{/install_only}}exists keys whose(value "DisplayName" of it as string starts with "{{DisplayName}}") of keys "HKLM\Software\Microsoft\Windows\CurrentVersion\Uninstall" of (x32 registries; x64 registries)]]></Relevance>
		{{/DisplayName}}{{/patch}}
		{{^install_only}}
		<Relevance><![CDATA[not exists (it as string as version) whose(it >= "{{version}}") of values "DisplayVersion" of keys whose(value "DisplayName" of it as string starts with "{{DisplayName}}") of keys "HKLM\Software\Microsoft\Windows\CurrentVersion\Uninstall" of (x32 registries; x64 registries)]]></Relevance>
		{{/install_only}}
		<Category></Category>
		<DownloadSize>{{DownloadSize}}{{^DownloadSize}}0{{/DownloadSize}}</DownloadSize>
		<Source>{{VendorFolder}}</Source>
		<SourceID>BigFix</SourceID>
		<SourceReleaseDate>{{SourceReleaseDate}}</SourceReleaseDate>
		<SourceSeverity></SourceSeverity>
		<CVENames></CVENames>
		<SANSID></SANSID>
		<MIMEField>
			<Name>action-ui-metadata</Name>
			<Value>{{>action-ui-metadata}}</Value>
		</MIMEField>
        <MIMEField>
			<Name>parametermetadatatag</Name>
			<Value>{
			"nessus_groups": {
			    "Name": "nessus_groups",
			    "Title": "Nessus Groups:",
                "Description": "(Optional) Enter the name of the group associated with this endpoint.",
		    	"UIType": "Textbox"
			},
			"nessus_server": {
		    	"Name": "nessus_server",
		    	"Title": "Nessus Server:",
                "Description": "(Required) Enter the fully qualified domain name of the Nessus Server and port number.",
		    	"UIType": "Textbox",
                "Required": "1",
		    	"Default": "cloud.tenable.com:443"
			},
			"nessus_key": {
		    	"Name": "nessus_key",
		    	"Title": "Nessus Key:",
                "Description": "(Required) Enter the Nessus Key.",
		    	"UIType": "Textbox",
                "Required": "1"
			}
			}</Value>
        </MIMEField>
		<MIMEField>
			<Name>x-fixlet-modification-time</Name>
			<Value>{{x-fixlet-modification-time}}</Value>
		</MIMEField>
		<Domain>BESC</Domain>
		<DefaultAction ID="Action1">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to deploy {{DisplayName}} v{{version}}.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell">
// Download:
{{{prefetch}}}

// Install:
override wait
hidden=true
completion=job
wait msiexec.exe /i __Download\{{{file_name}}} NESSUS_GROUPS="{parameter "nessus_groups"}" NESSUS_SERVER="{parameter "nessus_server"}" NESSUS_KEY={parameter "nessus_key"} /qn /norestart
</ActionScript>
      <SuccessCriteria Option="OriginalRelevance"></SuccessCriteria>
		</DefaultAction>
	</{{TypeTaskOrFixlet}}{{^TypeTaskOrFixlet}}Task{{/TypeTaskOrFixlet}}>
</BES>
