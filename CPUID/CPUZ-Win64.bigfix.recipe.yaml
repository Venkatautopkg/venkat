---
Description: Generates a BigFix Task for the latest CPU-Z for Windows x64
Identifier: com.github.bigfix.bigfix.CPUZ-Win64
Input:
  # Name: Short Name of the Software, No spaces, Example: "DBBrowserforSQLite"
  NAME: "CPUZ"
  # DisplayName: The start of the DisplayName key in the Windows Registry, Example: "DB Browser for SQLite"
  DisplayName: "CPUID CPU-Z"
MinimumVersion: '2.3'
ParentRecipe: com.github.bigfix.download.CPUZ-Win64
Process:
  # `SharedUtilityMethods` must come first
  - Processor: com.github.jgstew.SharedProcessors/SharedUtilityMethods
  # `BigFixPrefetchItem` takes the hashes from `URLDownloaderPython`
  #   Then it assembles them into a BigFix Prefetch Statement or Block
  - Processor: com.github.jgstew.SharedProcessors/BigFixPrefetchItem

  # `BigFixSetupTemplateDictionary` creates a dictionary to fill out a bigix content template
  #   If `SourceReleaseDate` is not provided, it will be set to today
  - Processor: com.github.jgstew.SharedProcessors/BigFixSetupTemplateDictionary

  # `TemplateDictionaryAppend` adds extra variables to the Template Dictionary
  #   This is only needed if the template uses extra variables
  - Processor: com.github.jgstew.SharedProcessors/TemplateDictionaryAppend
    Arguments:
      append_key: "DisplayName"
      append_value: "%DisplayName%"

  # download icon file:
  - Processor: URLDownloaderPython
    Arguments:
      # need to provide filename to not overwrite the setup file
      filename: "%NAME%-icon.png"
      url: https://www.cpuid.com/medias/images/softwares/cpu-z.png
      COMPUTE_HASHES: False
  # resize / shrink icon file:
  - Processor: com.github.jgstew.SharedProcessors/FileImageResize
  # get base64 of icon file:
  - Processor: com.github.jgstew.SharedProcessors/FileGetBase64
    Arguments:
      file_pathname: "%file_path_resized%"
  # add base64 of icon file to Template Dictionary:
  - Processor: com.github.jgstew.SharedProcessors/TemplateDictionaryAppend
    Arguments:
      append_key: "icon_base64"
      append_value: "%file_base64%"

  # `ContentFromTemplate` generates bigfix content from a mustache template file
  #   The file is filled out with variables from the Template Dictionary
  #   If variables are missing from the Template Dictionary, then that area will be blank
  - Processor: com.github.jgstew.SharedProcessors/ContentFromTemplate
    Arguments:
      template_file_path: "./CPUID/%NAME%-Win64-Install_Update.bes.mustache"
      content_file_pathname: "%RECIPE_CACHE_DIR%/%NAME%.bes"

  # `BESImport` imports the generated BES content into a BigFix Server
  #   Which server and credentials are used is dictated by `~/.besapi.conf`
  - Processor: com.github.jgstew.SharedProcessors/BESImport

  # `BigFixActioner` creates an action from the imported BigFix Content
  #   The action is an offer that requires user interaction to run in self service application
  #   The action targets all computers whose name contains `autopkg`
  - Processor: com.github.jgstew.SharedProcessors/BigFixActioner
